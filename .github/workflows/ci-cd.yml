name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NUGET_PACKAGE_NAME: "LiteBase"
  NUGET_SOURCE: "https://api.nuget.org/v3/index.json"

jobs:
  build-ui:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        working-directory: LiteBase/ui
        run: npm ci

      - name: Build UI
        working-directory: LiteBase/ui
        run: npm run build

      - name: Upload UI artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ui-dist
          path: LiteBase/ui/dist/
          retention-days: 1

  build-dotnet:
    runs-on: ubuntu-latest
    needs: build-ui
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Download UI artifacts
        uses: actions/download-artifact@v4
        with:
          name: ui-dist
          path: LiteBase/ui/dist/

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --configuration Release --no-restore --verbosity normal

      - name: Upload .NET artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dotnet-build
          path: LiteBase/bin/Release/
          retention-days: 1

  test-package:
    runs-on: ubuntu-latest
    needs: [build-ui, build-dotnet]
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/develop'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Download UI artifacts
        uses: actions/download-artifact@v4
        with:
          name: ui-dist
          path: LiteBase/ui/dist/

      - name: Download .NET artifacts
        uses: actions/download-artifact@v4
        with:
          name: dotnet-build
          path: LiteBase/bin/Release/

      - name: Create package
        run: dotnet pack LiteBase/LiteBase.csproj --configuration Release --output ./nupkgs

      - name: List package contents
        run: |
          echo "Package created successfully"
          ls -la ./nupkgs/

  publish-nuget:
    runs-on: ubuntu-latest
    needs: [build-ui, build-dotnet]
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Download UI artifacts
        uses: actions/download-artifact@v4
        with:
          name: ui-dist
          path: LiteBase/ui/dist/

      - name: Download .NET artifacts
        uses: actions/download-artifact@v4
        with:
          name: dotnet-build
          path: LiteBase/bin/Release/

      - name: Create package
        run: dotnet pack LiteBase/LiteBase.csproj --configuration Release --output ./nupkgs

      - name: Publish to NuGet
        run: dotnet nuget push ./nupkgs/*.nupkg --source ${{ env.NUGET_SOURCE }} --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate 
